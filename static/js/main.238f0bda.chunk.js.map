{"version":3,"sources":["components/index.tsx","components/experience/experience.tsx","core/routing.tsx","core/header.tsx","core/layout.tsx","core/app.tsx","serviceWorker.ts","index.tsx"],"names":["Heading","styled","h1","_templateObject","Index","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","React","Component","Bordered","div","experience_templateObject","Wrapper","_templateObject2","When","_templateObject3","h2","_templateObject4","Paragraph","p","_templateObject5","routes","path","component","exact","heading","bold","Experience","experience","map","item","experience_Heading","company","role","when","i","concat","start","end","join","description","achievements","achievement","Header","route","index","Item","to","activeClassName","replace","NavLink","Layout","Main","header_Header","props","children","AnimatedSwitchStyled","AnimatedSwitch","app_templateObject","zoom","val","spring","stiffness","damping","switchConfig","atEnter","opacity","offset","atLeave","atActive","mapStyles","styles","transform","App","HashRouter","basename","process","layout_Layout","assign","stripped","objectSpread","undefined","Route","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.238f0bda.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Heading = styled.h1`\n    font-size: 3em;\n    font-weight: 400;\n\n    @media screen and (max-width: 1000px) {\n        font-size: 2em;\n    }\n`;\n\nexport class Index extends React.Component {\n    render () {\n        return (\n            <Heading>\n                I'm an frontend engineer at Canva and student majoring in Computer Science  at the University of Sydney.\n            </Heading>\n        );\n    }  \n}\n","import React from 'react';\n\nimport experience from './experience.json';\nimport styled from 'styled-components';\n\nconst Bordered = styled.div`\n    border-bottom: 1px solid #DEDEDE;\n    padding: 2em 0;\n`;\n\nconst Wrapper = styled.div`\n    border-top: 1px solid #DEDEDE;\n    margin: 2em 0;\n`;\n\nconst When = styled.div`\n    font-size: 0.75em;\n    opacity: 0.8;\n    margin-bottom: 0.5em;\n    padding-left: 0em;\n`;\n\nconst Heading = styled.h2`\n    font-weight: 400;\n    font-size: 1.75em;\n    color: #707070;\n    margin: 0 0 0.5em 0;\n`;\n\nconst Paragraph = styled.p`\n    font-family: 'Noto Serif', serif;\n    font-size: 1.125em;\n    padding: 0 1em;\n    line-height: 1.6;\n`;\n\nexport class Experience extends React.Component {\n    render () {\n        return (\n            <Wrapper>\n                {\n                    experience.map(item => (\n                     <Bordered>\n                         <Heading>{item.company} - {item.role}</Heading>\n                         <When>\n                            {\n                                 item.when.map((when, i) => (\n                                     `${when.start} - ${when.end}`\n                                 )).join(' & ')\n                             }\n                         </When>\n                         <Paragraph>{item.description}</Paragraph>\n                         <Paragraph>\n                            <ul>\n                                {\n                                    item.achievements.map((achievement, i) => (\n                                        <li key={i}>{achievement}</li>\n                                    ))\n                                }\n                            </ul>\n                         </Paragraph>\n\n\n                     </Bordered>   \n                    ))\n                }\n            </Wrapper>\n        );\n    }  \n}","import { RouteProps } from 'react-router';\nimport { Index } from '../components/index';\nimport { Experience } from '../components/experience/experience';\nimport { Projects } from '../components/projects/projects';\n\ninterface RouteAdditionalProps {\n    heading?: string;\n    bold?: boolean;\n    path: string;\n} \n\ntype Route = RouteProps & RouteAdditionalProps;\n\nexport const routes: Route[] = [\n    {\n        path: '/',\n        component: Index,\n        exact: true,\n        heading: 'Alexander Edwards',\n        bold: true\n    },\n    {\n        path: '/experience/',\n        component: Experience,\n        heading: 'Experience',\n    },\n    // {\n    //     path: '/projects/',\n    //     component: Projects,\n    //     heading: 'Projects',\n    // },\n    // {\n    //     path: '/articles/',\n    //     component: Experience,\n    //     heading: 'Articles',\n    // },\n    // {\n    //     path: '/contact/',\n    //     component: Experience,\n    //     heading: 'Contact',\n    // },\n]","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { routes } from './routing';\n\nexport class Header extends React.Component {\n    static Header = styled.div`\n        font-family: 'Open Sans', sans-serif;\n        padding: 3rem 0;\n\n        @media screen and (max-width: 1000px) {\n            text-align: center;\n        }\n    `;\n\n    static Item = styled(NavLink)`\n        text-decoration: none;\n        color: #707070;\n        display: inline;\n\n        transition: color 100ms;\n        &.active {\n            color: #094C72;\n        }\n        padding-right: 2rem;\n\n        @media screen and (max-width: 1000px) {\n            padding: 0.5rem;\n        }\n\n    `;\n\n    render () {\n        return (\n            <Header.Header>\n                { \n                    routes.map((route, index: number) => {\n                        if (route.heading) {\n                            if (route.bold) {\n                                return (\n                                    <Header.Item to={route.path} key={index} activeClassName=\"active-disabled\" exact>\n                                        <b>\n                                            {route.heading.replace(/ /g, \"\\u00a0\") + ' '}\n                                        </b>\n                                    </Header.Item>\n                                );\n                            } else {\n                                return (\n                                    <Header.Item to={route.path} key={index} activeClassName=\"active\" >\n                                            {route.heading.replace(/ /g, \"\\u00a0\") + ' '}\n                                    </Header.Item>\n                                );\n                            }\n                        }\n                    })\n                }\n            </Header.Header>\n        );\n    }  \n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Header } from './header';\n\nexport class Layout extends React.Component {\n    static Main = styled.div`\n        margin: auto;\n        max-width: 1050px;\n\n        @media screen and (max-width: 1100px) {\n            padding: 0 1em;\n        }\n    `;\n\n    render () {\n        return (\n            <Layout.Main>\n                <Header/>\n                {this.props.children}\n            </Layout.Main>\n        );\n    }  \n}","import React, { Component } from 'react';\nimport { Layout } from './layout';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Index } from '../components/index';\nimport { routes } from './routing';\nimport { spring, AnimatedSwitch } from 'react-router-transition';\nimport styled, { css } from 'styled-components';\n\nconst AnimatedSwitchStyled = styled(AnimatedSwitch)`\n  position: relative;\n  & > div {\n    position: absolute;\n    width: 100%;\n    padding-bottom: 3rem;\n  }\n`;\n\nfunction zoom(val: number) {\n  return spring(val, {\n    stiffness: 135,\n    damping: 15,\n  });\n}\n\nconst switchConfig = {\n  atEnter: {\n    opacity: 0,\n    offset: -50,\n  },\n  atLeave: {\n    opacity: 0,\n    offset: zoom(50),\n  },\n  atActive: {\n    opacity: 1,\n    offset: zoom(0),\n  },\n};\n\nfunction mapStyles(styles: any) {\n  return {\n    opacity: styles.opacity,\n    transform: `translateY(${styles.offset}px)`,\n  };\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        \n        <Layout>\n          <AnimatedSwitchStyled\n            {...switchConfig}\n            mapStyles={mapStyles}\n          >\n            {\n              routes.map(route => {\n                const stripped = {\n                  ...route,\n                  bold: undefined,\n                  heading: undefined,\n                }\n                return <Route {...stripped}/>\n              })\n            }\n          </AnimatedSwitchStyled>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './core/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}